<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprKirdSpiritSide</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize

width = sprite_width / gridPixelSize;
button = mb_left;
image_speed = 0.1;

// for simplicity of example: always have a path, delete before making a new one
path = as_path_create(global.map,x div gridPixelSize, y div gridPixelSize, x div gridPixelSize, y div gridPixelSize, width, 2, -1);

maxspeed = 10;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Path

// set new path?
if (mouse_check_button_pressed(button)) {
    as_path_destroy(path);
    
    // align to "grid" so we don't get stuck in a wall
    move_snap(16,16);
    
    path = as_path_create(global.map,x div gridPixelSize, y div gridPixelSize, mouse_x div gridPixelSize, mouse_y div gridPixelSize, width, 2, -1);
}

// follow path

if (as_path_length(path) &gt; 0) {
    // tell us to move toward first node in path
    gox = as_path_nodex(path,0)*gridPixelSize;
    goy = as_path_nodey(path,0)*gridPixelSize;
    // remove first node of path if we are close enough to it
    if (point_distance(x,y,gox,goy) &lt;= maxspeed * 1.5) {
        as_path_removefirst(path);
    }
    
    move_towards_point(gox, goy, maxspeed);
} else {
    // stop moving
    speed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
